#!/bin/sh

# X11 Dynamic Menu
# ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬

# ....................................................................... E-mail

# select email contact addresses for insert into sup query
maildir=~/Maildir
addressbook=$maildir/addressbook

# build address list
# - exclude major lists correspondence
# - exclude news and announcement items
# - exclude malformed addresses, unexpected characters
# - addresses must include "user name" prefix
function dinit() {
  notify "Updating dmenu addressbook cache" "Please be patient.."
  /usr/bin/vendor_perl/ack --no-filename --ignore-case --no-color '^(From|To|Cc|Bcc):' $maildir \
    | grep '@' \
    | sed -e 's/\(\xad\|\x01\)/ /g' \
          -e 's/[,;] */\n/g' \
          -e 's/["]//g' \
          -e "s/[']//g" \
          -e 's/<br>//' \
          -e 's/<mailto:[^>]*>//' \
          -e 's/\t/ /g' \
          -e 's/  *$//' \
          -e 's/^  *//' \
          -e 's/  */ /g' \
          -e 's/^To: //I' \
          -e 's/^From: //I' \
          -e 's/^Cc: //I' \
          -e 's/^Bcc: //I' \
    | grep '^[^<].*<.*>$' \
    | grep -v '@.*<' \
    | grep -iv '\(^[^a-z]\|[=]\)' \
    | grep -Piv '<comments(?!@thedarnedestthing)' \
    | grep -iv '\(\(hello\|info\)@\)' \
    | grep -iv '\(announce\|automated\|confirm\|contact\|help\|invitations\|market\|news\|notification\|promo\|reply\|review\|subscribe\|welcome\)' \
    | grep -iv '\(feedspot\|github\|via linkedin\|yahoogroups\)' \
    | sort -f \
    | uniq -i \
    > $addressbook
  notify "Update of dmenu addressbook cache" "..Complete"
}

[[ -s $addressbook ]] || dinit
[[ $# -gt 0 ]] && dinit && exit

while true
do
  address=$(cat $addressbook | sed -e '1i[ clipboard ]\n[ rebuild database ]' | $(dlist) -p 'Email Address:') || break
  case "$address" in
    '[ clipboard ]')          break ;;
    '[ rebuild database ]')   dinit
                              continue
                              ;;
    *)                        [[ -z $addresses ]] && addresses=$address || addresses=$addresses,$address ;;
  esac
done
echo $addresses

# put selected address list in primary clipboaord for <ctrl-alt-v> input into sup mail
if [[ -n $addresses ]]; then
  # echo -n "$addresses" | xclip
  echo -n "$addresses" | xsel -i
  time=10000 notify "Ctrl-Alt-V" "$(echo $addresses | sed 's/ <\S*>//g')"
fi

