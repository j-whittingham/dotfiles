#!/usr/bin/env ruby
# encoding: UTF-8

# X11 Autostart
# ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬

require 'socket'

$desktop      = Socket.gethostname == "luna"
$remote       = Socket.gethostname == "lumen"
$netbook      = Socket.gethostname == "monad"
$laptop       = true if $remote or $netbook
$bspwm        = true if IO.read("#{ENV['HOME']}/.windowmanager") =~ /bspwm/
$herbstluftwm = true if IO.read("#{ENV['HOME']}/.windowmanager") =~ /herbstluftwm/
$notion       = true if IO.read("#{ENV['HOME']}/.windowmanager") =~ /notion/
$openbox      = true if IO.read("#{ENV['HOME']}/.windowmanager") =~ /openbox/
$xmonad       = true if IO.read("#{ENV['HOME']}/.windowmanager") =~ /xmonad/
$iontray      = true if File.exist?("#{ENV['HOME']}/.statusbar") and $notion
$loadapps     = true if $xmonad or $bspwm or $herbstluftwm
$wifi         = "Ravens"

conky_delay   = ($iontray or $desktop) ? 3 : 6  # long delay required for xmonad to prevent high cpu utilization
tray_width    = $desktop ? 85 : 65
term          = lambda { |title, bg=nil| "urxvt " +  (bg ? "-bg '#{bg}' +tr " : "") + "-title '#{title}' -name '#{title}' -e" }

def launch(p)
  if (p[0].to_s == "common")                         ||
     (p[0].to_s == "desktop"      and $desktop)      ||
     (p[0].to_s == "remote"       and $remote)       ||
     (p[0].to_s == "laptop"       and $laptop)       ||
     (p[0].to_s == "netbook"      and $netbook)      ||
     (p[0].to_s == "notion"       and $notion)       ||
     (p[0].to_s == "xmonad"       and $xmonad)       ||
     (p[0].to_s == "bspwm"        and $bspwm)        ||
     (p[0].to_s == "herbstluftwm" and $herbstluftwm) ||
     (p[0].to_s == "iontray"      and $iontray)      ||
     (p[0].to_s == "openbox"      and $openbox)
    print ":#{p[0]} => #{p[1]}\n"
    yield p[1]
  end
end

system "rm -f /tmp/autostart.log"

def shell(cmd)
  system "echo '#{cmd}' >>/tmp/autostart.log"
  system "#{cmd}"
end

# ....................................................... Window manager restart

killApps = [
  [:common,         "imapfilter"],
  [:common,         "ncmpcpp"],
  [:common,         "newsbeuter"],
  [:common,         "offlineimap"],
  [:common,         "pyradio"],
  [:common,         "slrn"],
  [:common,         "sup"],
  [:common,         "surf"],
  [:common,         "trayer"],
  [:common,         "trayion"],
  [:common,         "unclutter"],
  [:common,         "weechat"],
  [:common,         "xwinwrap"],
]

killApps.each do |app| launch(app) { |p| shell "sudo killall #{p} 2>/dev/null" } end

# .................................................... Kill by command line name

# killNamed = [
#   [:desktop,      "CouchPotato.py"],
#   [:desktop,      "Headphones.py"],
#   [:desktop,      "SickBeard.py"],
# ]
#
# killNamed.each do |app| launch(app) { |p| shell "kill -KILL $(pgrep -f \"#{p}\") 2>/dev/null" } end

# ....................................................... Session initialization

serverApps = [
  # remove any dangling lock files
  [:common,         "rm -f #{ENV['HOME']}/.msmtpqueue/.lock"],
  [:desktop,        "rm -f #{ENV['HOME']}/.nzbget.paused"],
  [:common,         "rm -f /tmp/setroot"],
  [:desktop,        "rm -f #{ENV['HOME']}/.session/rtorrent.lock"],
  [:common,         "rm -f #{ENV['HOME']}/.sup/lock"],
  [:common,         "rm -f #{ENV['HOME']}/.sup/xapian/flintlock"],
  [:common,         "rm -f /srv/http/tt-rss/lock/*"],
  # UI initialization
  [:common,         "eval $(gnome-keyring-daemon -s --components=pkcs11,secrets,ssh,gpg)"],
  [:laptop,         "synclient VertEdgeScroll=1"],
  [:laptop,         "synclient TapButton1=1"],
  # media servers
  # [:desktop,      "connmanctl connect $(connmanctl services | grep " + $wifi + " | awk '{ print $3; }')"],
  [:common,         "pidof gpg-agent >/dev/null || gpg-agent --homedir /home/shum/.gnupg --use-standard-socket --daemon 2>/tmp/gpg-agent.log"],
  [:desktop,        "ipfilter"],
  # [:desktop,      "pidof wpa_supplicant >/dev/null || (sudo ping -c 1 -W 1 10.1.0.1 && (sleep 3 && wicd-cli -c -y -n $(wicd-cli -ly | grep " + $wifi + " | cut -f1)))"],
  [:common,         "xrdb -merge #{ENV['HOME']}/.Xresources"],
  # [:laptop,         "keymap colemak"],
]

serverApps.each do |app| launch(app) { |p| shell "(#{p})&" } end

# ...................................................................... Daemons

daemonApps = [
  # [:common,       "adblock"],
  [:common,         "pidof dunst >/dev/null || dunst 2>/dev/null"],
  [:laptop,         "pidof mpd >/dev/null || (sleep 1 && mpd)"],
  [:desktop,        "pidof mpd >/dev/null || (sleep 2 && mpd)"],
  [:desktop,        "pidof nzbget >/dev/null || nzbget --daemon"],
  [:desktop,        "pidof thunar >/dev/null || thunar --daemon"],
  [:common,         "pidof urxvtd >/dev/null || urxvtd -q -o -f"],
]

daemonApps.each do |app| launch(app) { |p| shell "(#{p})&" } end

# ....................................................... Desktop initialization

desktopApps = [
  [:bspwm,          "pidof compton >/dev/null || compton"],
  [:herbstluftwm,   "draw compton"],
  [:xmonad,         "conky -q"],
  [:openbox,        "conky -p #{conky_delay} -q"],
  [:bspwm,          "conky -p #{conky_delay} -q -c #{ENV['HOME']}/.conkyrc"],
  # [:herbstluftwm, "toggle conky && [ $(hostname) = luna ] && draw monitor secondary"],
  [:desktop,        'dispread -v -d2 -c1 -yl "-P0.012987012987,1,4.11345646438" -k "L3007WFPHC 2014-02-04 2.2 M-S 3xCurve+MTX.cal" -s "L3007WFPHC 2014-02-04 2.2 M-S 3xCurve+MTX" 2>/dev/null'],
  [:desktop,        'dispread -v -d1 -c1 -yl "-P0.0195488721805,1,4.07630522088" -k "L 2209WA 2014-02-04 2.2 M-S 3xCurve+MTX.cal" -s "L 2209WA 2014-02-04 2.2 M-S 3xCurve+MTX" 2>/dev/null'],
  # [:bspwm,        "hsetroot -solid '#464F52'"],
  # [:common,       "nitrogen --restore"],
  # [:common,       "pidof qwertickle >/dev/null || qwertickle"],
  [:iontray,        "pidof trayion >/dev/null || trayion"],
  [:xmonad,         "pidof trayer >/dev/null || trayer --monitor primary --edge top --align right --SetDockType true --SetPartialStrut true --expand true --widthtype pixel --width #{tray_width} --transparent true --alpha 0 --tint 0x060606 --height 22 --distance 0"],
  [:desktop,        "dmenu screensaver on"],
  [:desktop,        "#{ENV['HOME']}/bin/xwinwrap_saver"],
]

desktopApps.each do |app| launch(app) { |p| shell "(#{p})&" } end

# ................................................................. Systray apps

systrayApps = [
  # [:common,       "ps -ef | grep autokey-gtk | grep -qv grep || autokey-gtk --verbose >/tmp/autokey.log 2>/dev/null"],
  [:desktop,        "pidof clipit >/dev/null || clipit"],
  [:laptop,         "pidof clipit >/dev/null || (sleep 3 && clipit)"],
  [:common,         "pidof xfce4-power-manager >/dev/null || xfce4-power-manager 2>/dev/null"],
]

systrayApps.each do |app| launch(app) { |p| shell "(#{p})&" } end

# ................................................................ Terminal apps

# turn off fading in .Xresources to gpick background for ncurses apps
# bg='#454545'
bg='#101010'

termApps = [
  [:herbstluftwm,   "[ $TRACE ] && term 'Trace' tail -f /tmp/herbstluftwm.log"],
  # some delays added to place master pane applications
  [:bspwm,          "#{term.call 'IRC'} weechat"],
  [:bspwm,          "#{term.call 'Mail'} alot"],
  [:herbstluftwm,   "term 'IRC' weechat"],
  [:herbstluftwm,   "term 'Mail' alot"],
  # [:desktop,      "#{term.call 'Mail'} alot"],
  # [:remote,       "#{term.call 'Mail'} alot"],
  # [:netbook,      "#{term.call 'Mail'} ssh -t luna alot"],
  # [:desktop,      "#{term.call 'NZB', bg} nzbget --connect"],
  # [:desktop,      "#{term.call 'Music'} ncmpcpp"],
  # [:desktop,      "#{term.call 'Radio', bg} pyradio"],
  # [:desktop,      "#{term.call 'RSS'} rss"],
  [:bspwm,          "#{term.call 'Calendar'} wyrd"],
  # [:herbstluftwm, "term 'Calendar' wyrd"],
  # [:desktop,      "#{term.call 'Usenet'} slrn"],
]

termApps.each do |app| launch(app) { |p| shell "(#{p})&" } end if $loadapps

# .................................................................. Window apps

windowApps = [
  # [:herbstluftwm, "astroid >/tmp/astroid.log 2>&1"],
  # [:common,       "$BROWSER &; (sleep 1 && $BROWSER https://www.archlinux.org/)"],
  [:common,         "$BROWSER"],
  [:bspwm,          "bspc rule --add Gvim --one-shot desktop=4 && gvim --role='thedarnedestthing' thedarnedestthing"],
  [:herbstluftwm,   "gvim --role='thedarnedestthing' thedarnedestthing"],
  # [:desktop,      "pavucontrol"],
  # [:desktop,      "tixati"],
  [:common,         "thedarnedestthing"],
]

windowApps.each do |app| launch(app) { |p| shell "(#{p})&" } end if $loadapps
