#!/bin/sh

# Office
# ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬

# .......................................................................... GTD

# TODO.sh loop for tmux/screen window
# delay for xmonad terminal frames to be created
sleep 1s

# force (no prompt), timestamp, verbose
options="-f -t -v $@"

# initialize bash environment if coming from other shell (fish)
export TERM=xterm-256color
export EDITOR=vim

function header() {
  title="$(color bold cyan blue) T O D O .txt $(head -c $(echo "$(tput cols) - 14" | bc) < /dev/zero | tr '\0' ' ')$(color normal white)"
  clear; echo "$title"; echo ":$@"
}

function refresh() { header $list; do_todo $list; }

function do_todo() {
  echo "$@" >> /tmp/todo-screen.log
  # if filter is anything other than "on", disable post filtering
  todo.sh $options $(echo $filter | sed -e 's/^on$//' -e 's/^..*$/-x/') $@ 2>> /tmp/todo-screen.log;
}

# TODO.sh loop
list=list; filter=on; refresh
while true
do
  echo; echo "  $(color bold black){ set list=$list   filter=$filter   project=$project   context=$context   priority=$priority }$(color normal)"
  read -p "  $(color green)$(date '+%A, %d %b %Y') $(color red)-$(date '+%-I:%M%P')-  $(color white)!todo "
  if [[ $REPLY = q ]]; then break; else refresh=true; fi
  if [[ -z $REPLY ]]; then REPLY=$list; fi
  if [[ $(echo "${REPLY%% *}" | egrep '(list|ls|projectview|pv|contextview|cv)') ]]; then refresh=false; header $REPLY; fi 
  # set some handy "add" and "list" defaults
  # set list=action e.g. pv, ls +project, ls @context, ls string
  # set project=+name
  # set context=@attribute
  # set priority=letter
  # to clear a setting...
  #   set variable=
  if [[ $(echo "${REPLY%% *}" | egrep "set$") ]]; then export ${REPLY#* }; continue; fi
  if [[ $(echo "$priority" | egrep "^[A-Za-z]$") ]]; then export pri="pri $priority"; else export pri=; fi
  if [[ $(echo "${REPLY%% *}" | egrep "a$") ]]; then REPLY="$REPLY $project $context"; fi
  if [[ $(echo "${REPLY%% *}" | egrep "add$") ]]; then REPLY="add $pri ${REPLY#* } $project $context"; fi
  # strip out extraneous spaces
  REPLY=$(echo "$REPLY" | sed -e 's/  */ /g' -e 's/ $//g')
  do_todo $REPLY
  if [[ $(echo "${REPLY%% *}" | egrep "edit|help") ]]; then refresh; fi
done
if [[ $refresh = true ]]; then refresh; fi
#echo; echo "  \"todo -x\" to disable filter"
echo
