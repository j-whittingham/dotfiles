#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Hardware
# ══════════════════════════════════════════════════════════════════════════════

# ................................................................. Splitography

usage() {
  echo "usage: $(basename $0) <keymap> [steno [nomouse]] [<string> [<string>]] [dfu]"
  exit 1
}
KEYMAPS='DEFAULT'

ROOT=/net/depot
ROOT=$HOME
QMK=$ROOT/qmk_firmware.steno
QMK=$ROOT/qmk_firmware
KEYBOARD=$QMK/keyboards/splitography
KEYMAP=$KEYBOARD/keymaps/$1
CONFIG=$KEYMAP/config.h
MAKEFILE=$KEYMAP/Makefile
# PRIVATE=$KEYMAP/private_string.h
PUBLIC_STRING=":%s/arch=(.*)/arch=('any')\n"

export CPATH=$KEYMAP/common

[ $1 ] || usage
keymap=$1
shift

ditto "$QMK" "$keymap"
ifno 'sync qmk_firmware repo' || { cd $QMK; rm -rf $KEYBOARD; git pull origin master; }

# update keymap from stow repo
mkdir -p $KEYMAP 2>/dev/null
rsync -avq -KL --delete --exclude .deprecated $STOW/splitography/${KEYBOARD#$ROOT/}/* $KEYBOARD/ 2>/dev/null

# steno (mouse may need to be mandisabled in config.h)
if [ "$1" = steno ] ;then
  sed -i -e '/STENO_ENABLE/s/= no /= yes/' $MAKEFILE
  shift
  [ "$1" = nomouse ] && { sed -i -e '/MOUSEKEY_ENABLE/s/= yes/= no /' $MAKEFILE; shift; }
else
  sed -i -e '/STENO_ENABLE/s/= yes/= no /' $MAKEFILE
fi

# compile time macro sting
grep -q PRIVATE_STRING $CONFIG || sed -i '$a#define PRIVATE_STRING ""' $CONFIG
grep -q PUBLIC_STRING $CONFIG || sed -i '$a#define PUBLIC_STRING ""' $CONFIG
# sed -i '/#define PRIVATE_STRING/c#define PRIVATE_STRING ""; /#define PUBLIC_STRING/c#define PUBLIC_STRING ""' $CONFIG

case $1 in
'' | dfu) ;;
*       ) sed -i "/#define PRIVATE_STRING/c#define PRIVATE_STRING \"$1\"" $CONFIG; shift; ;;
esac
case $1 in
'' | dfu) sed -i "/#define PUBLIC_STRING/c#define PUBLIC_STRING \"$(cat $HOME/.forward)\"" $CONFIG ;;
*       ) sed -i "/#define PUBLIC_STRING/c#define PUBLIC_STRING \"$1\"" $CONFIG ;;
esac

cd $QMK
sudo make splitography:$keymap:clean
[ "$1" = dfu ] && sudo CPATH=$CPATH make splitography:$keymap:dfu || make splitography:$keymap
sudo chown -R $USER:users $QMK

# vim: set ft=sh: #
