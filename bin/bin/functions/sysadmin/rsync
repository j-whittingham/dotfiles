#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Sysadmin
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ................................................................ Rsync wrapper

usage() {
  echo "usage: $(basename $0) arm | backup | depot | home | pi | server | stow | ttrss | usb [hostname] | vps | wiki | [--delete] <command>"
  exit 1
}

isopt "$1" && { option=$1 ; shift ;} || option='-av'

laptop=lumen
netbook=monad
exclude="
  --delete --delete-excluded 
  --exclude='.adblock*' 
  --exclude=.cabal 
  --exclude=cache 
  --exclude=.cache 
  --exclude=.cargo 
  --exclude=.cddb 
  --exclude=.cddbslave 
  --exclude=chromium 
  --exclude=.dbus 
  --exclude=dosdevices 
  --exclude=drive_c 
  --exclude=.fonts.dist 
  --exclude=.gem 
  --exclude=.ghc 
  --exclude=.git 
  --exclude=.kodi 
  --exclude=.local/share 
  --exclude=log 
  --exclude=logs 
  --exclude=.macromedia 
  --exclude=Maildir 
  --exclude=.molecule 
  --exclude=mpv 
  --exclude=.node-gyp 
  --exclude=.npm 
  --exclude=.nypy 
  --exclude=.offlineimap 
  --exclude=pkg.tar.xz 
  --exclude=scratch 
  --exclude='.steam*' 
  --exclude=sync-conflict 
  --exclude=.stack 
  --exclude=.thumbnails 
  --exclude=tmp 
  --exclude=.VirtualBox 
"

# sync but..
exclude_http_local='--exclude=thedarnedestthing.db --exclude=log'
exclude_trash='--exclude=Trash --exclude=Logs --exclude="*.corrupted" --exclude=sync-conflict'

rsync() { /usr/bin/rsync $option --exclude='lost+found' $@ ;}

rsync_home() {
  rsync $exclude /home/$USER $@
  # syncthing index most often corrupted
  rm -rfv $@/$USER/.config/syncthing/index*
  sync
}

music() {
  if laptop ;then
    ifyes "replicate mpd music database from $SERVER" && {
      killall mpd
      if [ ! -d /net/media ] ;then
        sudo mkdir /net/media
        sudo chown -c $USER:users /net/media
      fi
      rsync --delete $USER@$SERVER:.mpd $HOME/
      rsync --delete $SERVER:/net/media/music /net/media/
      nohup mpd >/dev/null 2>&1 &
    }
  else
    ditto "initiate update request from $laptop"
  fi
}

archive() {
  if server ;then
    ifyes 'backup media server databases to /net/archive' && {
      mkdir -pv /net/archive/var/lib || exit 1
      sudo rsync -av --delete /var/lib/sonarr /net/archive/var/lib/
      [ -d /net/archive/opt/plexmediaserver/Library/Application\ Support ] ||
        mkdir -pv /net/archive/opt/plexmediaserver/Library/Application\ Support || exit 1
      sudo rsync -av --delete /opt/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server \
                 /net/archive/opt/plexmediaserver/Library/Application\ Support/
      mkdir -p /net/archive/srv/lib || exit 1
      sudo rsync -av --delete /srv/lib/postgres /net/archive/srv/lib/
      mkdir -p /net/archive/etc/webapps/tt-rss || exit 1
      sudo rsync -av /etc/webapps/tt-rss/config.php /net/archive/etc/webapps/tt-rss/
    }
  fi
}

restore() {
  if server ;then
    ifno 'restore media server databases from /net/archive' || {
      sudo systemctl stop sonarr
      sudo rsync -av --delete /net/archive/var/lib/sonarr /var/lib/
      sudo systemctl start sonarr
      sudo systemctl stop plexmediaserver
      sudo rsync -av --delete /net/archive/opt/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server \
                 /opt/plexmediaserver/Library/Application\ Support/
      sudo systemctl start plexmediaserver
      sudo systemctl stop postgres
      sudo rsync -av --delete /net/archive/srv/lib/postgres /srv/lib/
      sudo systemctl start postgres
      sudo systemctl stop tt-rss
      sudo rsync -av /net/archive/etc/webapps/tt-rss/config.php /etc/webapps/tt-rss/
      sudo systemctl start tt-rss
    }
  fi
}

stow() {
  if server ;then
    sudo chown -cR $USER:users $HOME/stow/build/build/qmk_firmware
    ifyes "backup stow to $laptop" &&
      rsync --delete --exclude=.SyncArchive $STOW $USER@$laptop:$HOME/
    ifyes "backup stow to $netbook" &&
      rsync --delete --exclude=.SyncArchive $STOW $USER@$netbook:$HOME/
  else
    ifno "update stow to $SERVER" || rsync --exclude=.SyncArchive $STOW $USER@$SERVER:$HOME/
  fi
}

usb() {
  if [ -d /run/media/$USER/$(hostname)/home ] ;then
    rsync_home /run/media/$USER/$(hostname)/home/
    rsync --delete $HOME/bin/functions/log /run/media/$USER/$(hostname)/home/$USER/bin/functions/
    rsync --delete $STOW/mail/Maildir /run/media/$USER/$(hostname)/home/$USER/stow/mail/
    mkdir -p /run/media/$USER/$(hostname)/home/$USER.cache
    rsync $HOME/.cache/fcache:* /run/media/$USER/$(hostname)/home/$USER/.cache/
    sync
  elif [ -d /media/home ] ;then
    rsync_home /media/home/
    rsync $HOME/.password-store /media/home/$USER/
  elif [ -d /run/media/$USER/My\ Passport ] ;then
    mkdir -pv /run/media/$USER/My\ Passport/media || exit 1
    rsync --delete /net/media/videos/series /run/media/$USER/My\ Passport/media/videos/
    rsync --delete /net/photos /run/media/$USER/My\ Passport/
    sync
  elif [ -d /run/media/$USER/$2/home ] ;then
    rsync_home /run/media/$USER/$2/home/
  else
    ditto "insert ($(hostname)/passport) usb drive"
  fi
}

vps() {
  sudo touch /srv/http/thedarnedestthing.com/application/log/restart.txt
  trace 'updating => thedarnedestthing.com:/application'
  rsync -L --delete --exclude=vimwiki $exclude_http_local /srv/http/thedarnedestthing.com/application \
        thedarnedestthing.com:/srv/http/thedarnedestthing.com/
  rsync --delete /srv/http/thedarnedestthing.com/application/thedarnedestthing.db \
        thedarnedestthing.com:/srv/http/thedarnedestthing.com/application/
  rsync --delete /srv/http/thedarnedestthing.com/application/log/restart.txt \
        thedarnedestthing.com:/srv/http/thedarnedestthing.com/application/log/
  trace 'updating => thedarnedestthing.com:/vimwiki'
  rsync -L --delete $HOME/vimwiki thedarnedestthing.com:/srv/http/thedarnedestthing.com/application/public/
}


case $1 in
''     ) usage ;;
arm    ) cpu arm && rsync --delete --exclude='*sync-conflict*' $USER@$SERVER:$STOW $HOME/ ;;
backup ) server && { ifyes 'backup /net to /backup' && rsync --delete /net/* /backup/ ;} ;;

home   ) ifyes "backup $HOME to /net/archive" || exit
         mkdir -pv /net/archive/home || exit 1
         rsync --delete --exclude='VirtualBox VMs' $exclude_trash $HOME /net/archive/home/ ;;

depot  ) if server ;then
           ifyes "backup depot to $laptop" && rsync --delete /net/depot $laptop:/net/
         else
           ifno "update depot to $SERVER" || rsync /net/depot $SERVER:/net/
         fi ;;

music  ) music ;;
pi     ) server && rsync --delete /usr/share/icons/Paper pi:$HOME/.local/share/icons/ ;;
server ) archive ;;
SERVER ) restore ;;
stow   ) stow ;;

ttrss  ) if server ;then
           rsync --delete /srv/http/tt-rss/themes/my*.css $laptop:/srv/http/tt-rss/themes/
         else
           rsync --delete /srv/http/tt-rss/themes/my*.css $SERVER:/srv/http/tt-rss/themes/
         fi ;;

usb    ) usb ;;
vps    ) vps ;;

wiki   ) ifno 'recover thedarnedestthing.com:/vimwiki' && exit
         trace "thedarnedestthing.com:/vimwiki => $(hostname)"
         rsync --delete thedarnedestthing.com:/srv/http/thedarnedestthing.com/application/public/vimwiki $HOME/ ;;

*      ) /usr/bin/rsync $option --exclude='lost+found' $@ ;;
esac

# vim: set ft=sh: #
