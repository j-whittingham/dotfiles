#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# File
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ............................................................... Sync nfs share

# Usage: syncnfs [<path>]*
#
# Note: Local networked arm devices (raspberry pi's) nfs share server:~/stow
#       on mount point ~/stownfs and mirror this on the SD storage device ~/stow.
#       This juggling is implemented purely for arm SD file performance over NFS

CACHEDIR=${CACHEDIR:-$HOME/.cache}
watch=$CACHEDIR/syncnfs
undo=$HOME/stow/vim/.vim/backups
history=$HOME/stow/bin/bin/functions/dmenu/.history
arm=pi:
log=/tmp/syncnfs.log

[ -e $watch ] || touch $watch
# server is always online but satellite arm device may be offline (and sync on boot)
cpu arm || { ping -c 1 -W 1 pi >/dev/null 2>&1 || exit; }

stowname () {
  unset filename
  # fully qualified ~/stow pathname?
  if echo $1 | grep -q "^$HOME/stow" ;then
    filename=$1
  else
    # check if symbolic link to ~/stow
    linkname=$(lname $1)
    if echo $linkname | egrep -q '^(../)*stow/' ;then
      filename="$HOME/stow/${linkname#*stow/}"
    fi
  fi
  [ $filename ] && dirname $filename || echo
}

register() {
  grep -x $1 $watch || echo $1 >>$watch
}

# register modified source file directories (projects), see buffers.vim
# note: vim filespec must not be symbolic link!
if [ $1 ] ;then
  for i in $@
  do
    dir=$(stowname $i)
    echo $dir | grep -q "^$HOME/stow" && register $dir
  done
  # always update vim undo history and dmenu select history
  register $undo
  register $history
else
  if [ -s $watch ] ;then
    cpu arm && nfs=nfs || remote=$arm
    files=$(egrep -v '(/\.vim/backups|/dmenu/.history)$' $watch | sed "s|$HOME/stow/||")
    trace "Syncing ${remote}stow$nfs\n${_YELLOW_}$files" >>$log
    notify "Syncing ${remote}stow$nfs" "$(echo "$files")"
    # sync mirrored directories, see dev v script
    for i in $(sort -u $watch)
    do
      if cpu arm ;then
        target=$HOME/stownfs${i#$HOME/stow}
        rsync --delete $i ${target%/*}/ >>$log
      else
        rsync --delete $i ${remote}${i%/*}/ >>$log
      fi
    done
  fi
  > $watch
fi

# vim: set ft=sh: #
