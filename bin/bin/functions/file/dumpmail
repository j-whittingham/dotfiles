#!/usr/bin/ruby
# sdothum - 2016 (c) wtfpl

# encoding: UTF-8
# File
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# .................................................................. Print email

require 'term/ansicolor'
require 'sanitize'
require 'mail'
require 'time'

class String
  include Term::ANSIColor
end

def parse_mail(mail)
  if mail.multipart?
    text = ''
    mail.parts.each do |part|
      print "> #{part.mime_type}\n"
      text = text + (
        case part.mime_type
          when 'text/plain' then "#{part.body.decoded}".gsub(/\r\n/m, "\n")
          when 'text/html' then "#{part.body.decoded}".gsub(/<.*>/m, '').gsub(/.*>/m, '').gsub(/<.*/m, '').squeeze(' ').gsub(/\n /m, "\n")
          when /multipart\/.*/ then "#{mail.text_part.body.decoded}".gsub(/\r\n/m, "\n")
          else ''
        end
      ).gsub(/^ +/m, '')
      break if text.length > 1
    end
  else
    text = (
      print "> #{mail.mime_type}\n"
      case mail.mime_type
        when 'text/plain' then "#{mail.body}"
        when 'text/html' then "#{mail.body.decoded}".gsub(/<.*>/m, '').gsub(/.*>/m, '').gsub(/<.*/m, '').squeeze(' ').gsub(/\n /m, "\n")
        when /multipart\/.*/ then "#{mail.text_part.body.decoded}".gsub(/\r\n/m, "\n")
        else ''
      end
    ).gsub(/^ +/m, '')
  end
  # text.gsub(/\n\n/, "\n")
end

# view email (see rox)
begin
  mail = Mail.read(ARGV[0])
  print "mail: #{mail}"
  to = mail.to[0]
  from = mail.from.addresses[0]
  subject = mail.subject.gsub(/%20/, ' ').sub(/.*\/\/\/([^\/]*)\/\/\/.*/, '\1').downcase.strip.squeeze(' ')
  date = mail.date.strftime("%Y-%m-%d %H:%M:%S")
  print "Date: #{date}\n".green
  print "To: #{to}\n".green
  print "From: #{from}\n".green
  print "Subject: #{subject}\n".green
  begin
    text = parse_mail(mail)
    raise if text.length == 0
    raise if text.split("\n")[0] =~ /^-- *$/
    print "\nBody: ".green
    if text > ''

        break if line =~ /^-- *$/
        print "#{line}\n"
      end
    end
  rescue
    print "==> empty mime type #{mail.mime_type.yellow.bold}\n"
  end
rescue
  print "==> invalid mail #{ARGV[0].yellow.bold}\n" unless not ARGV[0]
end
