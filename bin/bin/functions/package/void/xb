#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Package
# ══════════════════════════════════════════════════════════════════════════════

# ........................................................... Package management

usage() {
  echo "usage: $(basename $0) [-] S | D | U | R | H [-<options>] [--<option>]* <package>"
  echo "        S .. sync noconfirm"
  echo "       -S .. sync confirm"
  echo "       -S    update repos"
  echo "        D .. downgrade"
  echo "        U .. update noconfirm"
  echo "       -U .. update confirm"
  echo "        R .. remove recursive"
  echo "       -R .. remove non-recursive"
  echo "        H .. hold"
  echo "       -H .. unhold"
  echo "    .. $(basename $0) H | S | U"
  echo "        H    held (list)"
  echo "        S .. installed (count)"
  echo "        U    upgrade system"
  echo "    .. $(basename $0) [/ | f** | d | r | l] [<package> | <file>**]"
  echo "        / .. search (package and description)"
  echo "        f .. find (file)"
  echo "        d .. dependencies"
  echo "        r .. required by"
  echo "        l .. log"
  echo "          .. query"
  exit 1
}

CACHE=/var/cache/xbps
[ $1 ] || usage

bootcheck() { sudo xbps-install -S; xbps-install -un | grep -q '^linux-[0-9]' && kernel=true; }

# default (no options) to package query
case $1 in
 S) [ $2 ] && { action=sync; yes='-y'; } || action=installed ;;
-S) [ $2 ] && action=sync || sudo xbps-install -S; exit ;;
 D) action=downgrade ;;
 U) [ $2 ] && { action=update; yes='-y'; } || { action=upgrade; bootcheck; } ;;
-U) [ $2 ] && action=update ;;
 R) action=remove; recursive='-R' ;;
-R) action=remove ;;
 H) [ $2 ] && action=hold || action=held ;;
-H) action=unhold ;;
/*) action=search; [ $1 = '/' ] || { package=${1#/}; shift; set -- 0 $package $@; } ;;  # allow /<pattern> short form (no action separator)
f ) action=file ;;
d ) action=dependency ;;
r ) action=requiredby ;;
l ) action=log ;;
* ) action=query; set -- 0 $@ ;;  # preserve argv stack
esac

shift; [ $1 ] || case $action in
held     ) ;;
installed) ;;
log      ) ;;
upgrade  ) ;;
*        ) usage ;;
esac

options=" $@"
package=${options##* }
options=${options% *}
[ $action = file ] || { [ $package ] && pkgver=$(xbps-query -S $package | grep pkgver | cut -d' ' -f2); }

case $action in
dependency) xbps-query -x $package ;;
downgrade ) sudo xdowngrade $CACHE/$package ;;
file      ) xlocate $package ;;
held      ) for i in $(xbps-query --list-hold-pkgs) ;do ditto held "$i" ;done ;;
hold      ) [ $pkgver ] && { sudo xbps-pkgdb -m hold $options $package; ditto hold "$pkgver"; } ;;
installed ) ditto installed "$(xbps-query -l $options | wc -l) packages" ;;
log       ) [ $package ] && ls -lt $CACHE/$package* || xilog | grep $(xilog | tail -1 | awk '{ print $3 }') ;;
query     ) [ $options ] && xbps-query -R $options $package || xbps-query -Rs $options "*$package*" | a $package ;;
remove    ) sudo xbps-remove $recursive $options $package ;;
requiredby) xbps-query -X $package ;;
search    ) xbps-query -Rs $options $package | a $package ;;
sync      ) sudo xbps-install $yes $options $package ;;
update    ) sudo xbps-install $yes $options -u $package ;;
upgrade   ) sudo xbps-install $options -u; [ $kernel ] && { ifno 'reboot new kernel' || sudo reboot; } ;;
unhold    ) [ $pkgver ] && { sudo xbps-pkgdb -m unhold $options $package; ditto unhold "$pkgver"; } ;;
esac

# vim: set ft=sh: #
