# sdothum - 2016 (c) wtfpl

# X11 Dynamic Menu
# ══════════════════════════════════════════════════════════════════════════════

# ....................................................................... Movies

# Usage: dmenu movies [cache] [animation]

# Library structure:
# ../videos
#        ../movies
#               ../title.YEAR.*  (movie)

  LAST='[ last watched ]'
  NAME='[ sort by name ]'
  DATE='[ sort by date ]'
  EDIT='[ manage       ]'
SEARCH='[ search       ]'

# preload cache option
[ "$1" = cache ] && { shift; cache=true; }

nzb=/net/downloads/nzbs/completed
library=${LIBRARY:-/net/media/videos/${1:-movies}}
playlist=$library/.playlist
catlg=$CACHEDIR/dmenu:${1:-movies}
usenet=https://nzbgeek.info/geekseek.php?c=2040
retitle=$library/.retitle
rm -f $retitle

# unset debug to remove exit from menu items
debug='\nexit'
find $library -name '*sample*' -exec rm {} \; &

# list latest movie additions first
T=t
catlg() {
  cat /dev/null >$catlg
  ls -1$T $library | sed -r 's/\./ /g; s/(.*) ([12][0-9][0-9][0-9])( .*)*/\1  (\2)/' >/tmp/dmenu:movies
  playlist /tmp/dmenu:movies $playlist >$catlg &
}

cache() {
  stest -qr -n $catlg $(find $library -maxdepth 1 -type d) || return
  notify low 'Movies' 'Caching library..'
  # clean up titles
  retitle $library >>$retitle
  [ -e $playlist ] || echo >$playlist
  catlg
}

# any new media added?
[ ! -s $catlg ] || stest -dqr -n $catlg $library && cache
[ $cache      ] && exit

options() {
  [ $(find $nzb -maxdepth 1 -type d | wc -l) -gt 1 ] && edit="\\\\\\n$EDIT" || unset edit
  grep -q '[^ ]' $playlist && echo "$LAST\\\n$SEARCH\\\n[ $(sortlist $T) ]$edit" || echo "[ $(sortlist $T) ]$edit"
}

playback() {
  while : ;do
    action=$(echo "play\nmrqe\nimdb\nmanage\ndelete\nmark$debug" | rmenu "$movie" -no-custom) || break
    title=$(echo "$movie" | sed 's/  (\([12][0-9][0-9][0-9]\))$/ \1/; s/ /./g')
    video=$(find $library -maxdepth 1 -type d -regex ".*/${title}.*")

    case $action in
    play  ) if [ $(echo "$video" | wc -l) -gt 1 ] ;then
              notify 3 critical "$movie" "Duplicate movie files found"
              term 'movies' WAIT ranger "$video" || term 'movies' WAIT ranger $library
            fi
            mhistory $playlist "$movie"; catlg; play "$video" "$movie"; break ;;

    mrqe  ) surf "http://www.mrqe.com/search?q=$movie"; pwait "surf http://www.mrqe.com/search?q=$movie" ;;
    imdb  ) surf "http://www.imdb.com/find?s=all&q=$movie"; pwait "surf http://www.imdb.com/find?s=all&q=$movie" ;;
    manage) term 'movies' WAIT ranger "$video" || term 'movies' WAIT ranger $library; catlg; break ;;
    delete) rm -rf "$video"; catlg; break ;;
    mark  ) mhistory $playlist "$movie"; catlg; break ;;
    exit  ) exit ;;
    esac
  done
}

while : ;do
  # rebuilding catalogue?
  [ ! -s $catlg ] && { sleep 0.1; continue; }
  # focus monitor menu originally presented on
  [ $monitor ] && herbstclient focus_monitor $monitor

  movie=$(cat $catlg | sed "1i$(options)" | rmenu 'Movie' "$movie" -no-custom) || break

  [ "$movie" = "$LAST" ] && movie=$(grep '[^ ]' $playlist | head -1)
  case $movie in
  "$NAME"  ) unset T; continue ;;
  "$DATE"  ) T=t;     continue ;;
  "$SEARCH") surf $usenet; pwait "surf $usenet"; continue ;;
  "$EDIT"  ) pkill -TERM 'ROX-Filer'; rox $nzb; rox $library; pwait "ROX-Filer $nzb"; exec dmenu movies cache $1 ;;
  *        ) movie=$(echo "$movie" | sed "s/^$SEP //"); playback ;;
  esac
done

# vim: set ft=sh: #
