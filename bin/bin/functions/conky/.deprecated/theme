# sdothum - 2016 (c) wtfpl

# X11 Desktop
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ........................................................................ Conky

# Conky desktop themer for clock and ring meters
#
# .conkyrc format:
#   default_color [hex colour] (ring)
#   color0 [hex colour]        (ring)
#   color1 [hex colour]        (text)
#   color2 [hex colour]        (text)
#   color3 [hex colour]        (text)
#   color4 [hex colour]        (text)
#   color5 [hex colour]        (text)
#   color6 [hex colour]        (ring)
#   color7 [hex colour]        (graph)
#   color8 [hex colour]        (graph)
#   color9 [hex colour]        (hidden)
#   #colorA [hex colour]       (hidden)
#   #colorI [hex colour]       (hidden)
#
# conky-rings.lua format:
#   default_color=0x[hex colour]
#   color0=0x[hex colour]
#   color6=0x[hex colour]
#
# theming formula uses ColorCodeHex tables..
# base = https://www.colorcodehex.com/[hex colour]/
#   default_color [base]
#   color0 [base mono-1]
#   color1 to color5 uses solarized paper mono-1 gradients
#   color6 [color0 mono-3]
#   color7 [color0 mono-1]
#   color8 [color0]
#   color9 [base complementary]
#   colorA [base mono-2]
#   colorI [color9 mono-2]

usage() {
  echo "usage: $(basename $0) theme  paper | ink"
  echo "usage: $(basename $0) theme  test | contrast | light | dark  <hex colour>"
  echo "usage: $(basename $0) theme  rings <3..> | graphs <2..> | text <5..> | hidden <3..> | colours <8..> | scheme <8..> <paper|ink>,  <hex colours..>"
  exit 1
}

# .......................................................... Config file updates

conkyrc=$HOME/.conkyrc
conkylua=$HOME/.conky/conky-rings.lua
env=$HOME/.config/herbstluftwm/config/ENV

# apply colors to conky and herbstluftwm config files
conkyrc() { sed -i --follow-symlinks "/^ *$1 =/s/= .*/= '$2',/" $conkyrc; }

conkylua() { sed -i --follow-symlinks "/^$1=/s/=0x.*/=0x$2/" $conkylua; }

env() { sed -i --follow-symlinks "/^export $1=/s/='#.*'/='#$2'/" $env; }

# colour schemes
rings() {
  color=$1
  conkyrc default_color $1
  conkylua default_color $1
  shift
  conkyrc color0 $1
  conkylua color0 $1
  shift
  conkyrc color6 $1
  conkylua color6 $1
}

text() {
  conkyrc color1 $1
  shift
  conkyrc color2 $1
  shift
  conkyrc color3 $1
  shift
  conkyrc color4 $1
  shift
  conkyrc color5 $1
}

graphs() {
  conkyrc color7 $1
  shift
  # conkyrc color8 $1
  # conkyrc color8 $(complimentary $1)
  conkyrc color8 $color
}

hidden() {
  conkyrc color9 $1
  env INACTIVE_FG $1
  shift
  conkyrc '--colorA' $1
  env ACTIVE_HIDDEN_FG $1
  shift
  conkyrc '--colorI' $1
  env INACTIVE_HIDDEN_FG $1
}

# ............................................. Auto-scrape colour relationships

colours() {
  panel $1
  rings $@
  shift 3
  graphs $@
  shift 2
  hidden $@
}

scheme() {
  panel $1
  colours $@
  shift 8
  conky theme $1
}

panel() { env DEFAULT_FG $1; }

monochromatic() { echo -n "$hex" | grep 'Monochromatic' | cut -d/ -f$1; }

# see conky palette
hexgen() {
  default_color=$1
  hex=$(conky palette $default_color)
  color0=$(monochromatic 10)
  color9=$(echo -n "$hex" | grep 'Complementary' | head -1 | cut -d/ -f6)
  colorA=$(monochromatic 6)
  # echo $default_color $color0 $color6 $color7 $color8 $color9 $colorA $colorI
  hex=$(conky palette $color0)
  color6=$(monochromatic 2)
  color7=$(monochromatic 10)
  color8=$color0
  # echo $default_color $color0 $color6 $color7 $color8 $color9 $colorA $colorI
  hex=$(conky palette $color9)
  colorI=$(monochromatic 6)
  # echo $default_color $color0 $color6 $color7 $color8 $color9 $colorA $colorI
  colours $default_color $color0 $color6 $color7 $color8 $color9 $colorA $colorI
}

complimentary () { conky palette $1 | grep -a 'Complementary' | head -1 | cut -d/ -f6; }

# ....................................................................... Themes

tmpbackup() {
  tmp=$(mktemp).conkyrc
  cp -v $conkyrc $tmp
  tmp=$(mktemp).conky-rings.lua
  cp -v $conkylua $tmp
}

action=$1
shift
case "$action" in
  contrast) if [ $# -eq 1 ] ;then
              # contrast theme colors
              luminance +$1 && conky theme dark $1 || conky theme light $1
              complimentary $1
            fi ;;

  light) if [ $# -eq 1 ] ;then
           hexgen $(conky palette $1 | grep -a 'Monochromatic'  | cut -d/ -f18)
           conky theme paper
           complimentary $1
         fi ;;

  dark) if [ $# -eq 1 ] ;then
          hexgen $(conky palette $1 | grep -a 'Monochromatic'  | cut -d/ -f2)
          conky theme ink
          complimentary $1
        fi ;;

  test) if [ $# -eq 1 ] ;then
          tmpbackup
          hexgen $1
          echo $default_color $color0 $color6 $color7 $color8 $color9 $colorA $colorI
          luminance +$default_color && conky theme paper || conky theme ink
          # are we in interactive mode
          theme=$(query theme)
          if if-no "update $theme" ;then
            exit 1
          else
            echo $default_color $color0 $color6 $color7 $color8 $color9 $colorA $colorI >$theme
            if if-no "change contrast" ;then
              exit
            else
              luminance -$default_color && contrast=paper || contrast=ink
              sed -i "s/$/ $contrast/" $theme
              exit
            fi
          fi
        fi ;;

  paper) text f0f0f0 c0c0c0 909090 707070 505050
         conkylua COLORING FFFFFF
         env ACTIVE_FG f0f0f0 ;;

  ink) text 000000 080808 101010 202020 303030
       conkylua COLORING 000000
       env ACTIVE_FG 000000 ;;

  rings)  [ $# -eq 3 ] && rings $@ ;;
  graphs) [ $# -eq 2 ] && graphs $@ ;;
  text)   [ $# -eq 5 ] && text $@ ;;
  hidden) [ $# -eq 3 ] && hidden $@ ;;

  colo*rs) if [ $# -eq 8 ] ;then
             colours $@
             # match theme colors
             luminance +$1 && conky theme paper || conky theme ink
           fi ;;

  scheme) [ $# -eq 9 ] && scheme $@ ;;

  h | *) usage ;;
esac

# vim: set ft=sh: #
