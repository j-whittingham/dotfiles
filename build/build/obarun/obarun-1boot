#!/bin/sh
# sdothum - 2016 (c) wtfpl

# obarun boot configuration

source ./obarun-functions

# home user zsh config and install scripts will be copied to
user=${1:-shum}
echo "--> USER: $user"


heading 'configure package manager'
# ══════════════════════════════════════════════════════════════════════════════
original /etc/pacman.conf
sed -i -e '/^\[options\]/aILoveCandy' \
    -e '/^#\[multilib\]/,+1s/^#//' \
    -e '/^#Color/s/^#//' \
    /etc/pacman.conf
pacman -Sy
checkpoint


heading 'installing wireless tools'
# ══════════════════════════════════════════════════════════════════════════════
pm_install dialog
pm_install iw
pm_install wpa_supplicant
# cp /etc/netctl/examples/wireless-wpa /etc/netctl/my-wireless-network
# essid=s/ESSID=.*/ESSID=$(wpa_passphrase "Ravens" "the keys of enoch" | grep ssid | sed 's/.*\(".*"\)/\1/')/
# key=s/Key=.*/Key=\\\\\"$(wpa_passphrase "Ravens" "the keys of enoch" | grep "[^#]psk" | sed 's/.*=\(.*\)/\1/')/
# sed -i -e $essid -e $key /etc/netctl/my-wireless-network
# netctl enable my-wireless-network
echo noarp >/etc/dhcpcd.conf
checkpoint


heading 'set sudo'
# ══════════════════════════════════════════════════════════════════════════════
sed -i "/$user/s/zsh/bash/" /etc/passwd
pm_install sudo
original /etc/sudoers
sed -i '/# %wheel ALL=(ALL) NOPASSWD: ALL/s/# // ; /## Defaults specification/aDefaults insults' /etc/sudoers
EDITOR=nano visudo
# cat /etc/sudoers
checkpoint


heading 'install base-devel'
# ══════════════════════════════════════════════════════════════════════════════
pm_install base-devel
# pm_install expac
pm_install git
pm_install gnome-keyring
# pm_install jshon
# pm_install namcap
# pm_install openssh
# pm_install yajl
checkpoint


heading 'default shell'
# ══════════════════════════════════════════════════════════════════════════════
pm_install bc
pm_install dash
pm_install fish
pm_install gvim
config_install /etc/profile.d/path.sh
checkpoint


heading 'enable tty autologin'
# ══════════════════════════════════════════════════════════════════════════════
checkpoint


heading 'configure btrfs in mkinitcpio.conf'
# ══════════════════════════════════════════════════════════════════════════════
# sed -i '/^HOOKS=/s/fsck/btrfs usr shutdown/' /etc/mkinitcpio.conf
original /etc/mkinitcpio.conf
sed -i '/^HOOKS=/s/fsck/btrfs/' /etc/mkinitcpio.conf
nano /etc/mkinitcpio.conf
mkinitcpio -p linux
checkpoint


heading 'installing bootloader'
# ══════════════════════════════════════════════════════════════════════════════
read -p "Boot disk /dev/sd? [a-z] | /dev/mmcblk? [0]: " disk
if [ -z $disk ] ;then
  echo 'invalid disk reference.. aborting'
  exit
fi
[ $disk = 0 ] && device=/dev/mmcblk${disk} || device=/dev/sd${disk}
efi=$(partition EFI)
if [ $efi ] ;then
  pm_install grub
  pm_install efibootmgr
  pm_install dosfstools
  pm_install os-prober
  pm_install mtools
  grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=grub_uefi --recheck
else
  pm_install grub-bios
  grub-install --target=i386-pc --recheck $device
fi
cp /usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo
grub-mkconfig -o /boot/grub/grub.cfg
checkpoint


heading 'sync home directory'
# ══════════════════════════════════════════════════════════════════════════════
# if [ ! -d /home/$user/stow ] ;then
#   pm_install rsync
#   mkdir /net
#   mount -L Share -t btrfs /net
#   [ -d /net/archive/home/$user ] && rsync -av /net/archive/home/$user /home/
#   # assume usb image is contains most upto date scripts
#   rsync -av /media/home/$user /home/
#   rm -f /home/$user/.conky*  # discard other configuration settings
#   rm -f /home/$user/.session/*
#   touch /home/$user/.session/panel:ticker
#   touch /home/$user/.session/panel:weather
#   touch /home/$user/.session/setroot
#   touch /home/$user/.session/noblur
#   chown -R $user:users /home/$user/.session
# fi



heading 'cd / and umount /media (usb), exit chroot'
# ══════════════════════════════════════════════════════════════════════════════
# sudo mkdir -pv /net/downloads

# vim: set ft=sh: #
