#!/usr/bin/env fish
# assumes that fish is already installed along with user functions
# so a virgin install will require some user installation preparation
# notably the above, bin/install and software depot of non-deb packages
# see install-zfs to include /data/depot installs from this script

[ (hostname) = luna ]; and set desktop true
[ (hostname) = monad ]; and set laptop true

function new-install
  [ -d /data/depot -a -f ~/.new-install ]; and true; or false
end


#-----------------------------------------------------------------------------
headline "initialize fresh install"
#-----------------------------------------------------------------------------
!p dropbox; and begin; if-no "enable dropbox daemon during install"; or ~/.dropbox-dist/dropboxd &; end
if [ (pidof script | wc -l) -eq 0 ]
  echo '... run "script" to log stdout messages'
  exit
end

if [ -f ~/.new-install ]
  [ (cat ~/.windowmanager) = xmonad ]; and sudo cp -v ~/.config/terminator/config.xmonad ~/.config/terminator/config
  set --export aptopt y
else
  if-yes "verify installed packages only"; and set --export aptopt s; or begin;
    if-no "re-install all packages"; and exit; or set --export aptopt i
  end
end

# for future install decisions based on available ram and disks instead of hostname
set gbram (cat /proc/meminfo | head -1 | awk '{printf ("%i", $2/1024/1024)}')
set numdisks (ll /dev/sd*1 | wc -l)
set --export distro (head -1 /etc/apt/apt.conf | sed 's/^.*"\(.*\)".*/\1/')

[ $aptopt = s ]; or begin
  log ""
  log ""
  log "Starting netinstall-3apps ... "(date '+%Y.%m.%d %H:%S:%M')
  annotate "using debian $distro"
  log ""

  # default log of log.fish.. note: nohup .. 2>/dev/null to suppress fish keybinding error message
  touch ~/tmp/session.log
  # nohup terminator --profile=xmonad -x tail -f ~/tmp/session.log 2>/dev/null &

  # capture log (script) of install exceptions (see install)
  echo "#!/usr/bin/env fish
  # netinstall-3apps exceptions
  # edit this failed install list as required
  # run as: ./netinstall-3exceptions [options ..]
  # example: ./netinstall-3exceptions -t sid

  " >~/bin/install/netinstall-3exceptions
  chmod -v 755 ~/bin/install/netinstall-3exceptions
  # nohup terminator --profile=xmonad -x tail -f ~/bin/install/netinstall-3exceptions 2>/dev/null &
end

grep -q '^deb ftp://ftp.deb-multimedia.org' /etc/apt/sources.list; and sudo aptitude -y --allow-untrusted install deb-multimedia-keyring


#-----------------------------------------------------------------------------
headline "astronomy"
#-----------------------------------------------------------------------------
# if [ $desktop ]
#  install celestia
#  install kstars
# end
install stellarium


#-----------------------------------------------------------------------------
headline "browsers"
#-----------------------------------------------------------------------------
install chromium
install elinks
sudo update-alternatives --set www-browser /usr/bin/elinks

install flashplugin-nonfree
install iceweasel
new-install; and ~/bin/install/install-jumanji
install luakit
# new-install; and ~/bin/install/install-luakit

install uzbl
install w3m


#-----------------------------------------------------------------------------
headline "chat"
#-----------------------------------------------------------------------------
# install bitlbee
# install irssi irssi-scripts
# install libtime-duration-perl

# install finch
install pidgin
install xchat


# #-----------------------------------------------------------------------------
# headline "codecs"
# #-----------------------------------------------------------------------------
# #install gstreamer0.10-plugins-bad
# #install gstreamer0.10-plugins-good
# install gstreamer0.10-plugins-ugly
# install gstreamer1.0-plugins-bad
# #install gstreamer1.0-plugins-good
# #install gstreamer1.0-plugins-ugly


#-----------------------------------------------------------------------------
headline "cups printing"
#-----------------------------------------------------------------------------
# lpr doesn't work with cups, use lp instead which uses cups default printer
install cups
install cups-pdf
install system-config-printer
install printer-driver-hpijs
sudo grep -q "^lpadmin.*$USER" /etc/group; or sudo sed -i 's/\(^lpadmin:.*$\)/\1,'$USER'/' /etc/group
[ $laptop ]; and annotate "http://localhost:631 to configure printer and network sharing"


#-----------------------------------------------------------------------------
headline "database management software"
#-----------------------------------------------------------------------------
install sqlite3
install sqlitebrowser
# new-install; and ~/bin/install/install-sqliteman


#-----------------------------------------------------------------------------
headline "desktop"
#-----------------------------------------------------------------------------
install clipit

new-install; and ~/bin/install/install-compton
!p compton; and ~/bin/compton &

install gpick
install hsetroot
install lxappearance
install nitrogen
install rss-glx
# install screenruler
install scrot
# install xcompmgr
install xfce4-notifyd
install xfce4-screenshooter
install xscreensaver


#-----------------------------------------------------------------------------
headline "document formatting"
#-----------------------------------------------------------------------------
install csstidy
install enscript


#-----------------------------------------------------------------------------
headline "editors"
#-----------------------------------------------------------------------------
# install bluefish
install exuberant-ctags
# install focuswriter
# install leksah
# install markdown
new-install; and ~/bin/install/install-nvpy
install retext


#-----------------------------------------------------------------------------
headline "file transfer"
#-----------------------------------------------------------------------------
# install nzbget
new-install; and ~/bin/install/install-nzbget
# install par2 pypar2

install rtorrent
mkdir -v ~/.session 2>/dev/null
if [ $desktop ]
  # sudo dpkg -i /data/depot/torrent/tixati/tixati_*_amd64.deb
  # annotate "add level1 blocklist http://list.iblocklist.com/?list=bt_level1&fileformat=p2p&archiveformat=gz"
  # annotate+ "add bogon blocklist http://list.iblocklist.com/?list=bt_bogon&fileformat=p2p&archiveformat=gz"
  install transmission
  annotate "update transmission-gtk blocklist url http://list.iblocklist.com/?list=bt_level1&fileformat=p2p&archiveformat=gz"

  # install sabnzbdplus
  # etc-config /etc/default/sabnzbdplus
  new-install; and ~/bin/install/install-couchpotato
  new-install; and ~/bin/install/install-sickbeard
end

install unrar


# #-----------------------------------------------------------------------------
# headline "filesystems"
# -----------------------------------------------------------------------------
# install hfsplus
# install hfsprogs
# install hfsutils
# install hfsutils-tcltk


#-----------------------------------------------------------------------------
headline "file managers"
#-----------------------------------------------------------------------------
install file-roller
install filelight
install ncdu
install ranger
install rox-filer
install thunar
install thunar-archive-plugin
install thunar-media-tags-plugin
install tumbler
install vifm

#
#-----------------------------------------------------------------------------
headline "fonts and font managers"
#-----------------------------------------------------------------------------
install font-manager
install fontmatrix
install fonts-freefont-ttf
install fonts-inconsolata
install ttf-anonymous-pro
install ttf-bitstream-vera
# install ttf-freefont
install ttf-mscorefonts-installer
install ttf-xfree86-nonfree
# rebuild font caches
rm -rf /home/shum/.fontconfig/*
sudo fc-cache -fv


#-----------------------------------------------------------------------------
headline "java"
#-----------------------------------------------------------------------------
install icedtea-6-plugin
install openjdk-6-jre


# #-----------------------------------------------------------------------------
# headline "liquorix kernel"
# -----------------------------------------------------------------------------
# if [ $distro = unstable ]
#  sudo apt-get install --yes --force-yes '^liquorix-([^-]+-)?keyring.?'
#  sudo apt-get install --yes --force-yes linux-image-liquorix-amd64
# fi


#-----------------------------------------------------------------------------
headline "mail client"
#-----------------------------------------------------------------------------
install antiword

# #install mutt mutt-patched mutt-vc-query muttprint muttprint-manual
# install mutt mutt-patched muttprint muttprint-manual abook
# mkdir -v ~/attachments 2>/dev/null
# chown -v $USER ~/attachments
# 
# install notmuch
# mkdir -pv ~/.mail/.notmuch
# mkdir -pv ~/.cache/mutt_results
# ln -svf ~/.cache/mutt_results ~/.mail/.notmuch/=Search
# annotate "initialize notmuch by running: notmuch setup; and notmuch new"
# new-install; and ~/bin/install/install-mutt-notmuch
# # not part of the #! backports distribution?
# install libmail-box-perl

# install sup-mail
new-install; and ~/bin/install/install-sup

install lynx
original /etc/lynx-cur/lynx.cfg
  and sudo sed -i -e 's/^#\(ENABLE_LYNXRC:ACCEPT_ALL_COOKIES:ON\)/\1/' \
                  -e '$ahttp_proxy:http://localhost:8118/' /etc/lynx-cur/lynx.cfg

install urlscan
# install urlview


#-----------------------------------------------------------------------------
headline "mail services"
#-----------------------------------------------------------------------------
install archivemail

install imapfilter
mkdir -pv ~/.mail/gmail

install msmtp-mta
sudo cp -v /usr/share/doc/msmtp/examples/msmtpqueue/msmtp*.sh /usr/local/bin/
sudo chmod -v 755 /usr/local/bin/msmtp*.sh
sudo ln -svf /usr/local/bin/msmtp-enqueue.sh /usr/local/bin/sendmail
original /usr/sbin/sendmail
  # sudo ln -svf /usr/local/bin/msmtp-enqueue.sh /usr/sbin/sendmail
  and sudo ln -svf /usr/local/bin/sendmail /usr/sbin/sendmail
ln -sfv ~/.config/mail/msmtprc ~/.msmtprc
[ -L ~/.msmtprc ]; and chmod -v 600 ~/.config/mail/msmtprc; or chmod -v 600 ~/.msmtprc
#  initialize crontab for sendmail (and all other user cron processes)
sudo cp -v ~/.config/crontab/crontab /var/spool/cron/crontabs/$USER
sudo chmod -v 600 /var/spool/cron/crontabs/$USER
sudo chown -v $USER:crontab /var/spool/cron/crontabs/$USER

install offlineimap


#-----------------------------------------------------------------------------
headline "music"
#-----------------------------------------------------------------------------
install mpc

install mpd
[ -d ~/.mpd/playlists ]; or mkdir -pv ~/.mpd/playlists
touch ~/.mpd/{mpd.db,pid,state,sticker.sql,tag_cache}
touch ~/tmp/mpd.log
if [ -L ~/.mpdconf ]
  sudo cp -v ~/.config/mpdconf ~/.mpdconf.save
  sudo cp -v /etc/mpd.conf ~/.config/mpdconf
else
  sudo cp -v /etc/mpd.conf ~/.config/mpdconf
  ln -sfv ~/.config/mpdconf ~/.mpdconf
  # annotate "configure ~/.mpdconf for non-root access to local mpd files"
end
sed -i -e 's,/var/lib/mpd/music,/data/media/music,' \
       -e 's,/var/log/mpd/mpd.log,~/tmp/mpd.log,' \
       -e 's,/run/mpd/pid,~/.mpd/pid,' \
       -e 's,/var/lib/mpd,~/.mpd,' \
       -e 's/^user/#user/' \
       -e 's/^#\(follow_outside_symlinks\)/\1/' \
       -e 's/^#\(follow_inside_symlinks\)/\1/' ~/.config/mpdconf
[ $desktop ]; and sed -i \
       -e '/^audio_output/,/^}/s/^\([^#]\)/#\1/' \
       -e '$aaudio_output { \
        type            "pulse" \
        name            "My MPD PulseAudio Output" \
}' ~/.config/mpdconf
# local user instance required for pavucontrol visibility
# sudo /etc/init.d/mpd stop
# sudo update-rc.d -f mpd remove
sudo systemctl stop mpd.service
sudo systemctl disable mpd.service
mpd &

install ncmpcpp
mpc update


#-----------------------------------------------------------------------------
headline "network and security"
#-----------------------------------------------------------------------------
# [ $desktop ]; and install airport-utils
# install gnome-bluetooth

install network-manager
# sudo systemctl enable NetworkManager
# sudo systemctl start NetworkManager

install network-manager-gnome

install openssh-client
install openssh-server
original /etc/ssh/sshd_config
  and sudo sed -i -e 's/^\(AcceptEnv LANG LC_\*\)/#\1/' \
                  -e '$aAcceptEnv TERM LANG LC_*' /etc/ssh/sshd_config
# sudo systemctl enable ssh.service
# sudo systemctl start ssh.service
sudo systemctl restart ssh.service

install ntp

install vsftpd
original /etc/vsftpd.conf
  and sudo sed -i -e 's/^\(anonymous_enable\)=YES/\1=NO/' \
                  -e 's/^#\(local_enable=YES\)/\1/' \
                  -e 's/^#\(write_enable=YES\)/\1/' \
                  -e 's/^#\(local_umask=022\)/\1/' \
                  -e 's/^\(connect_from_port_20\)=YES/\1=NO/' \
                  -e 's/^#\(ls_recurse_enable=YES\)/\1/' /etc/vsftpd.conf
restart vsftpd
sudo systemctl enable vsftpd.service
sudo systemctl start vsftpd.service
# sudo systemctl restart vsftpd.service


#-----------------------------------------------------------------------------
headline "package management"
#-----------------------------------------------------------------------------
# install aptitude-gtk
install apt-file
install apt-listbugs
install apt-rdepends
install apt-show-versions
install debfoster
install deborphan
install synaptic


#-----------------------------------------------------------------------------
headline "photography"
#-----------------------------------------------------------------------------
# install darktable
# install gimp
# install gimp-gmic
# install gimp-plugin-registry
# 
# if [ $desktop ]
#  install dcraw
#  install digikam
#  #install dispcalgu
#  #install gimp-ufraw
#  #install qtpfsgui
#  install rawstudio
#  install rawtherapee
#  install showfoto
#  #install ufraw
#  #new-install; and ~/bin/install/install-macrofusion
# end

new-install; and ~/bin/install/install-viewnior


#-----------------------------------------------------------------------------
headline "productivity"
#-----------------------------------------------------------------------------
install apcalc
# install artha
install autokey-gtk
install dict
install dictd
install dict-gcide
install dict-jargon
install dict-moby-thesaurus
install dict-wn
install fortunes
install fortunes-off
# install fortunes-min
# install fortune-mod
install galculator
install gnumeric
install gsimplecal
install ktouch
install xpad


#-----------------------------------------------------------------------------
headline "proxies"
#-----------------------------------------------------------------------------
# install dante-server
# etc-config /etc/danted.conf (hostname)
# sudo /etc/init.d/danted stop
# sudo /etc/init.d/danted start

install polipo
original /etc/polipo/config
  and sudo sed -i -e 's/^# *\(cacheIsShared = false\)/\1/' \
                  -e '$adnsNameServer = 127.0.0.1' /etc/polipo/config
# restart polipo
# sudo systemctl enable polipo.service
# sudo systemctl start polipo.service
sudo systemctl restart polipo.service

install privoxy
original /etc/privoxy/config
  and sudo sed -i 's/^\(enable-edit-actions\) 0/\1 1/' /etc/privoxy/config
original /etc/privoxy/user.action
  and sudo sed -i '$a \
{ fragile } \
a.img-dpreview.com' /etc/privoxy/user.action
annotate "configure browser proxies to localhost:8118"
# restart privoxy
# sudo systemctl enable privoxy.service
# sudo systemctl start privoxy.service
sudo systemctl restart privoxy.service

if [ $desktop ]
  install squid3
  # etc-config /etc/squid3/squid.conf
  original /etc/squid3/squid.conf
    and sudo sed -i '$a \
acl localnet src 10.0.0.0/8 \
acl Safe_ports port 631     # cups \
acl Safe_ports port 6789    # nzbget \
acl Safe_ports port 32400   # plexmediaserver \
http_access allow localnet \
cache_peer 127.0.0.1 parent 8118 7 no-digest no-query \
hierarchy_stoplist cgi-bin ? \
cache_dir ufs /var/spool/squid3 100 16 256 \
via off \
request_header_access From deny all \
request_header_access Referer deny all \
request_header_access Server deny all \
request_header_access WWW-Authenticate deny all \
request_header_access Link deny all \
request_header_access Cache-Control deny all \
reply_header_access From deny all \
reply_header_access Referer deny all \
reply_header_access Server deny all \
reply_header_access User-Agent deny all \
reply_header_access WWW-Authenticate deny all \
reply_header_access Link deny all \
shutdown_lifetime 0 seconds \
forwarded_for delete' /etc/squid3/squid.conf
  # restart squid3
  # sudo systemctl enable squid3.service
  # sudo systemctl start squid3.service
  sudo systemctl restart squid3.service
end


if [ $desktop ]
#-----------------------------------------------------------------------------
headline "ripping"
#-----------------------------------------------------------------------------
  # install abcde
  # install asunder
  # install vloopback-source
  # install ffmpeg
  # install gnome-subtitles
  # install genisoimage
  # install growisofs
  # install handbrake-cli
  install handbrake-gtk
  install k3b
  install rubyripper
  # install sonata
  # install soundconverter
  # install xfburn
end


#-----------------------------------------------------------------------------
headline "sound"
#-----------------------------------------------------------------------------
install alsa-base
if [ $laptop ]
  [ -f ~/.asoundrc ]; and sudo mv -v ~/.asoundrc.save
  annotate "restore ~/.asoundrc(.pulse) for pulseaudio playback"
end

if [ $desktop ]
  install paprefs
  # new-install; and ~/bin/install/install-pavolume
  install pavucontrol
  install pulseaudio
end
install xfce4-mixer
install xfce4-volumed


#-----------------------------------------------------------------------------
headline "system"
#-----------------------------------------------------------------------------
install anacron
new-install; and ~/bin/install/install-ansi-color
install autocutsel
install cpufrequtils
install keepassx
# install launchy

install preload
# sudo systemctl enable preload.service
# sudo systemctl start preload.service

install rlwrap
# install screen
# install startupmanager
install suckless-tools
# install synapse
install sysv-rc-conf
# install tmux
install xfce4-power-manager
install xsel


#-----------------------------------------------------------------------------
headline "system monitor and test"
#-----------------------------------------------------------------------------
install bmon
install bonnie++

install gsmartcontrol
original /etc/default/smartmontools
  and sudo sed -i 's/^#\(start_smartd=yes\)/\1/' /etc/default/smartmontools
original /etc/smartd.conf
  and sudo sed -i 's,^DEVICESCAN.*,DEVICESCAN -d removable -n standby -m sdothum@gmail.com -M exec /usr/share/smartmontools/smartd-runner,' /etc/smartd.conf
original /etc/smartmontools/run.d/10mail; and begin
  etc-config /etc/smartmontools/run.d/10mail
  sudo chmod -v 600 /etc/smartmontools/run.d/10mail
end
# sudo systemctl enable smartmontools.service
# sudo systemctl start smartmontools.service
sudo systemctl restart smartmontools.service

install htop
install iftop
install iotop
install memtester
install tcpflow
install tcptrack


#-----------------------------------------------------------------------------
headline "themes and gtk engines"
#-----------------------------------------------------------------------------
# gtk engine for ffuu theme
new-install; and ~/bin/install/install-equinox
install gnome-icon-theme-extras
install gtk-chtheme
install gtk2-engines-murrine
install gtk2-engines-pixbuf
install murrine-themes


#-----------------------------------------------------------------------------
headline "utilities"
#-----------------------------------------------------------------------------
install ack-grep
sudo ln -sfv /usr/bin/ack-grep /usr/bin/ack

# install cronolog
install gftp
install gparted
# install gprename
# install guake

install mlocate
original /etc/updatedb.conf
  and sudo sed -i -e 's/# \(PRUNENAMES=".*\)"/\1 .cache Trash backups"/' \
                  -e 's,\(PRUNEPATHS=".*\)",\1 /data /bkup",' /etc/updatedb.conf
sudo updatedb &

install putty
install tree


#-----------------------------------------------------------------------------
headline "version control"
#-----------------------------------------------------------------------------
install mercurial


#-----------------------------------------------------------------------------
headline "video"
#-----------------------------------------------------------------------------
install minitube
install mplayer
# etc-config /etc/mplayer/mplayer.conf
# install mplayerthumbs
# install smplayer
sudo dpkg -i /data/depot/media/umplayer/umplayer_0.97-1+r181~webupd8~oneiric2_amd64.deb
install xbmc
install xbmc-skin-confluence


#-----------------------------------------------------------------------------
headline "viewers"
#-----------------------------------------------------------------------------
[ $desktop ]; and install calibre
install comix
install evince
install fbreader
install mupdf
# install xchm
install zathura


# if [ $desktop ]
if [ $gbram -gt 4 ]
#-----------------------------------------------------------------------------
headline "virtualbox"
#-----------------------------------------------------------------------------
  # wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -
  install linux-headers-(uname -r)
  install dkms
  install virtualbox
  install virtualbox-guest-additions-iso
  sudo VBoxManage extpack install /data/depot/virtualbox/Oracle_VM_VirtualBox_Extension_Pack-*.vbox-extpack
  # install virtualbox-4.2
  # annotate "adding \"vboxdrv\" to /etc/modules"
  # # sudo echo >>/etc/modules; sudo echo vboxdrv >>/etc/modules
  # sudo sed -i '$avboxdrv' /etc/modules
  # cat /etc/modules
  # annotate "switching udev reference from /usr/share/virtualbox to /lib/udev (/usr not mounted)"
  # sudo cp -v /usr/share/virtualbox/VBoxCreateUSBNode.sh /lib/udev/
  # original /etc/udev/rules.d/10-vboxdrv.rules
  # sudo sed -i 's,/usr/share/virtualbox,/lib/udev,' /etc/udev/rules.d/10-vboxdrv.rules
end


#-----------------------------------------------------------------------------
headline "window managers"
#-----------------------------------------------------------------------------
# install awesome awesome-extra
# install dwm
# install herbstluftwm
# install i3
# install ratpoison
# install spectrwm
# install stumpwm
# install subtle
# install wmii
# install xfce4

install libghc-xmonad-doc
new-install; and ~/bin/install/install-dmenu

install notion
new-install; and ~/bin/install/install-trayion
[ -d ~/.x11/notion/default-session--0 ]; or mkdir -pv ~/.x11/notion/default-session--0
chown -Rv $USER ~/.x11


#-----------------------------------------------------------------------------
headline "x11"
#-----------------------------------------------------------------------------
if [ $desktop ]
  install arandr
  install lxrandr
end

install xorg-docs-core
install xrestop


#-----------------------------------------------------------------------------
headline "web"
#-----------------------------------------------------------------------------
# install blogilo
# install canto
install newsbeuter
install surfraw
# install ttytter
new-install; and ~/bin/install/install-turses


#-----------------------------------------------------------------------------
headline "usenet"
#-----------------------------------------------------------------------------
install slrn

install slrnpull
original /etc/default/slrnpull
  and sudo sed -i "s/^RUNFROM=.*/RUNFROM='cron job'/" /etc/default/slrnpull
original /etc/news/slrnpull.conf; and begin
  # can't append directly after delete to eof
  sudo sed -i '/^default/,$d' /etc/news/slrnpull.conf
  sudo sed -i '$adefault 100 14 0' /etc/news/slrnpull.conf
end
[ -f /etc/cron.daily/slrnpull ]; and sudo mv -v /etc/cron.daily/slrnpull /etc/cron.hourly/
[ -L /var/spool/news ]; or begin
  sudo ln -sfv /var/spool/slrnpull/news /var/spool/news
  etc-config /var/spool/slrnpull/authinfo /var/spool/slrnpull/authinfo
  sudo chmod -v 600 /var/spool/slrnpull/authinfo
  sudo chown -Rv news:news /var/spool/slrnpull
end
sudo touch /var/log/news/slrnpull.log
touch ~/.config/slrn/jnewsrc


#-----------------------------------------------------------------------------
headline "passenger / sinatra"
#-----------------------------------------------------------------------------
new-install; and ~/bin/install/install-sinatra


if [ $desktop ]
#-----------------------------------------------------------------------------
headline "plexmediaserver"
#-----------------------------------------------------------------------------
  [ -f /etc/apt/sources.list.d/plexmediaserver.list ]; or begin
    echo "deb http://shell.ninthgate.se/packages/debian squeeze main" | sudo tee -a /etc/apt/sources.list.d/plexmediaserver.list
    sudo curl http://shell.ninthgate.se/packages/shell-ninthgate-se-keyring.key | sudo apt-key add -
    sudo apt-get update
  end
  install plexmediaserver
  original /etc/default/plexmediaserver
    and sudo sed -i 's,^# \(PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR\).*,\1="/srv/plexmediaserver/Library/Application Support",' /etc/default/plexmediaserver
  [ -d /srv/plexmediaserver/Library/Application\ Support ]; or sudo mkdir -pv /srv/plexmediaserver/Library/Application\ Support
  sudo chown -R plex /srv/plexmediaserver/
  restart plexmediaserver
end

# finished with package installs !!
[ -f ~/.new-install ]; or exit
sudo rm -f ~/.new-install


#-----------------------------------------------------------------------------
headline "install exceptions"
#-----------------------------------------------------------------------------
annotate "logged install exceptions"
cat ~/bin/install/netinstall-3exceptions
log ""
log "Ending netinstall-3apps ... "(date '+%Y.%m.%d %H:%S:%M')
log ""


# #-----------------------------------------------------------------------------
# headline "init level services removal"
# #-----------------------------------------------------------------------------
# #sudo update-rc.d bluetooth remove
# sudo update-rc.d exim4 remove
# sudo update-rc.d gdomap remove
# sudo update-rc.d motd remove
# sudo update-rc.d nfs-common remove
# #sudo update-rc.d openvpn remove
# sudo update-rc.d saned remove
# annotate "services can be re-enabled with sysv-rc-conf or update-rc.d"


#-----------------------------------------------------------------------------
headline "complete installation"
#-----------------------------------------------------------------------------
if-yes "set default applications"; and sudo update-alternatives --all
exec ~/bin/install/netinstall-4post
