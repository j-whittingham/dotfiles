#!/bin/sh
# my fresh arch pre-installer

function heading() {
    message=">>>   $@   <<<"
    echo $(head -c $(echo "$message" | wc -L) < /dev/zero | tr '\0' '-')
    echo "$message"
    echo $(head -c $(echo "$message" | wc -L) < /dev/zero | tr '\0' '-')
}

function connect() {
    if [ $(cat /sys/class/net/$interface/operstate). != up. ]; then
        heading "connecting $interface"
        if [ $interface = eth0 ]; then
            dhcpcd eth0
        else
            wpa_passphrase "Ravens" "the keys of enoch" >/etc/wpa_supplicant.my.conf
            iwconfig wlan0 essid "Ravens"
            wpa_supplicant -B -Dwext -iwlan0 -c/etc/wpa_supplicant.my.conf
            dhcpcd wlan0
        fi
    fi
}

function checkpoint() {
    while [ 1 ]; do
        read -p "continue? [yes]/no/shell :"
        reply=${REPLY,,}
        if [ "$reply." = "n." ]; then
            exit
        elif [ "$reply." = "s." ]; then
            bash -i
        elif [ "$reply." = "." -o "$reply." = "y." ]; then
            return
        fi  
    done
}

if [ $1. != eth0. -a $1. != wlan0. ]; then
    heading 'please select interface: archlinux-preinstaller.sh [eth0 | wlan0]'
    exit
fi
interface=$1

heading 'select colemak kbd layout :-)'
loadkeys colemak
checkpoint
heading 'allocate btrfs subvolumes'
# km
# modprobe dm-mod
fdisk -l
[ -d /mnt ] || mkdir /mnt
mount /dev/sda2 /mnt
btrfs subvolume create /mnt/boot
btrfs subvolume create /mnt/home
btrfs subvolume create /mnt/opt
btrfs subvolume create /mnt/srv
btrfs subvolume create /mnt/tmp
btrfs subvolume create /mnt/usr
btrfs subvolume create /mnt/usr/local
btrfs subvolume create /mnt/var
btrfs subvolume list /mnt
checkpoint
heading 'point mirrorlist'
nano /etc/pacman.d/mirrorlist
checkpoint
heading 'install archlinux base'
pacstrap -i /mnt base
checkpoint
heading 'edit fstab'
genfstab -U -p /mnt >>/mnt/etc/fstab
nano /mnt/etc/fstab
checkpoint
heading 'chroot to /mnt'
arch-chroot /mnt
heading 'set language'
sed -i 's/#\(en_US.UTF-8 UTF-8\)/\1/' /etc/local.gen
echo LANG=en_US.UTF-8 >/etc/locale.conf
export LANG=en_US.UTF-8
heading 'set timezone and clock'
ls /usr/share/zoneinfo
ls /usr/share/zoneinfo/America
ln -sv /usr/share/zoneinfo/America/Toronto /etc/localtime
hwclock --systohc --utc
checkpoint
heading 'set up wired network'
systemctl enable dhcpcd@eth0.service
heading 'set up wireless network'
pacman -S wireless_tools wpa_supplicant wpa_actiond dialog
wifi-menu
systemctl enable net-auto-wireless.service
checkpoing
heading 'configure package manager'
sed -i -e 's/#\(\[multilib\]\)/\1/' \
       -e 's,#\(Include = /etc/pacman.d/mirrorlist\),\1,' /etc/pacman.conf
pacman -Sy
checkpoint
heading 'set root password'
passwd
heading 'create user account'
useradd -m -g users -G wheel,storage,power -s /bin/bash shum
passwd shum
pacman -S sudo
EDITOR=nano visudo
checkpoint
heading 'install bootloader'
pacman -S grub-bios
grub-install --target=i386-pc --recheck /dev/sda
cp /usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo
grub-mkconfig -o /boot/grub/grub.cfg
checkpoint
heading 'exit chroot and reboot'
exit
umount /mnt
reboot

#-----------------------------------------------------------------------------

heading 'update repositories'
pacman -Syy
# heading 'install gdisk: ignore updating packages for now'
# pacman -S gptfdisk
# heading 'create gpt disk partitions: (1) 32mb "EF02" bios boot (2) "8E00" linux lvm'
# gdisk /dev/sda
# heading 'pvcreate /dev/sda2'
# pvcreate /dev/sda2
# heading 'vgcreate vg1 /dev/sda2'
# vgcreate vg1 /dev/sda2
# checkpoint
# heading 'create logical volumes'
# lvcreate -C y -L 4G   -n swap vg1
# lvcreate -L 200M      -n boot vg1
# lvcreate -L 1G        -n root vg1
# lvcreate -L 20G       -n home vg1
# lvcreate -L 500M      -n local vg1
# lvcreate -L 1G        -n opt vg1
# lvcreate -L 500M      -n srv vg1
# lvcreate -L 200M      -n tmp vg1
# lvcreate -L 6G        -n usr vg1
# lvcreate -L 4G        -n var vg1
# lvscan
# checkpoint
# heading 'building filesystems'
# mkswap /dev/vg1/swap 
# mkfs.ext2 /dev/vg1/boot 
# mkfs.ext4 /dev/vg1/root 
# mkfs.ext4 /dev/vg1/home 
# mkfs.ext4 /dev/vg1/local 
# mkfs.ext4 /dev/vg1/opt
# mkfs.ext4 /dev/vg1/srv 
# mkfs.ext4 /dev/vg1/tmp 
# mkfs.ext4 /dev/vg1/usr 
# mkfs.ext4 /dev/vg1/var 
checkpoint
heading 'configure existing lvm'
pvscan
vgscan
vgchange -ay
heading 'basic archlinux install setup'
echo '- DO NOT partition the drives, instead, skip to "Manually configure block devices..."'
echo '- select base packages, base development and "netcfg" "sudo" "wireless_tools"'
echo '- edit /etc/rc.conf: KEYMAP="colemak" USELVM="yes" HOSTNAME="..."'
echo '- edit /etc/mkinitcpio: HOOKS="... sata lvm2 filesystems ..."'
checkpoint
/arch/setup
checkpoint
ls /mnt
df -h
mount -o bind /dev /mnt/dev
mount -t proc /proc /mnt/proc
mount -t sysfs /sys /mnt/sys
chroot /mnt /bin/bash
connect
checkpoint
# heading 'install grub2'
# pacman-db-upgrade
# pacman -Syy
# pacman -S grub2-bios
heading 'initializing /boot/grub'
grub_bios-install --boot-directory=/boot --no-floppy --recheck --debug /dev/sda
grub-mkconfig -o /boot/grub/grub.cfg
heading 'grub.cfg'
sleep 5
more /boot/grub/grub.cfg
checkpoint
exit
umount /mnt 
heading 'ready to reboot!'
